<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Php | Chicken's Blog ^_^]]></title>
  <link href="http://codeforfoods.net/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://codeforfoods.net/"/>
  <updated>2014-12-18T09:35:40+07:00</updated>
  <id>http://codeforfoods.net/</id>
  <author>
    <name><![CDATA[codeforfoods]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Work With Chef Server]]></title>
    <link href="http://codeforfoods.net/blog/2014/12/01/work-with-chef-server/"/>
    <updated>2014-12-01T16:44:10+07:00</updated>
    <id>http://codeforfoods.net/blog/2014/12/01/work-with-chef-server</id>
    <content type="html"><![CDATA[<p>In <a href="blog/2014/11/07/php-cooking/">previous post</a> I have wrote how to use Chef Solo to setup and deploy a Server with PHP stuff. Today I&rsquo;d like to use Chef Server for storing Chef&rsquo;s configurations (Cookbooks, Roles, Enviroments, Data Bags) and Bootstrap a server use Chef Server.</p>

<h1>Setup Chef Server</h1>

<p>The easiest way to get started with a Chef server is to use Opscode’s <a href="http://www.opscode.com/hosted-chef/">Hosted Chef</a>–it’s free for up to 5 nodes. Once you exceed 5 nodes you can decide whether to pay a monthly fee or install your own Chef server.</p>

<ul>
<li>Register your free trial of hosted Chef</li>
</ul>


<p><img class="<a" src="href="https://lh5.googleusercontent.com/-PeezzBJhRrE/VHwwAKgzq7I/AAAAAAAAABk/OBw78YVf5Mk/w707-h604-no/Sign_Up_-_Chef_Manage.png">https://lh5.googleusercontent.com/-PeezzBJhRrE/VHwwAKgzq7I/AAAAAAAAABk/OBw78YVf5Mk/w707-h604-no/Sign_Up_-_Chef_Manage.png</a>&#8221;></p>

<ul>
<li>Get pem key from profile</li>
</ul>


<p><img class="<a" src="href="https://lh6.googleusercontent.com/-_tKhvVNO0u8/VHww8xtE59I/AAAAAAAAABw/O_cbtONexe0/w791-h640-no/Chef_-_Account_Management.png">https://lh6.googleusercontent.com/-_tKhvVNO0u8/VHww8xtE59I/AAAAAAAAABw/O_cbtONexe0/w791-h640-no/Chef_-_Account_Management.png</a>&#8221;></p>

<ul>
<li>Generate Knife config</li>
</ul>


<p><img class="<a" src="href="https://lh4.googleusercontent.com/-xyw-Lzc3V5Y/VHwzDvnqQwI/AAAAAAAAACY/RJsXXJP_6VY/w710-h640-no/Chef_Manage_and_php-cooking_%E2%80%94_bash_%E2%80%94_162%C3%9730.png">https://lh4.googleusercontent.com/-xyw-Lzc3V5Y/VHwzDvnqQwI/AAAAAAAAACY/RJsXXJP_6VY/w710-h640-no/Chef_Manage_and_php-cooking_%E2%80%94_bash_%E2%80%94_162%C3%9730.png</a>&#8221;></p>

<ul>
<li>Fork the <code>php-cooking</code> from <a href="blog/2014/11/07/php-cooking/">previous post</a></li>
</ul>


<pre><code>https://github.com/code-for-food/php-cooking.git # fork from github
</code></pre>

<ul>
<li><p>Move to <code>php-cooking</code> and copy client key and validation key to <code>.chef</code> folder.</p></li>
<li><p>Replace the knife.rb in .chef folder</p></li>
</ul>


<pre><code class="ruby">
current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
node_name                "codeforfoods"
client_key               "#{current_dir}/codeforfoods.pem" # replace by your key
validation_client_name   "chicken-validator"
validation_key           "#{current_dir}/chicken-validator.pem" # replace by your key
chef_server_url          "https://api.opscode.com/organizations/chicken"
cache_type               'BasicFile'
cache_options( :path =&gt; "#{ENV['HOME']}/.chef/checksums" )


cookbook_path    ["cookbooks", "site-cookbooks"]
node_path        "nodes"
role_path        "roles"
environment_path "environments"
data_bag_path    "data_bags"
encrypted_data_bag_secret "#{current_dir}/encrypted_data_bag_secret"
</code></pre>

<ul>
<li><p>Upload cookbooks to Chef server</p>

<pre><code>  knife cookbook upload --all
</code></pre></li>
</ul>


<p><img class="<a" src="href="https://lh6.googleusercontent.com/-0WxqaSjoQfE/VHw9TgYqHEI/AAAAAAAAACo/qyVX1k3ZFdY/w266-h293-no/php-cooking_%E2%80%94_bash_%E2%80%94_162%C3%9730.png">https://lh6.googleusercontent.com/-0WxqaSjoQfE/VHw9TgYqHEI/AAAAAAAAACo/qyVX1k3ZFdY/w266-h293-no/php-cooking_%E2%80%94_bash_%E2%80%94_162%C3%9730.png</a>&#8221;></p>

<p>View on Chef server</p>

<p><img class="<a" src="href="https://lh3.googleusercontent.com/-_jRaxKzYeac/VHw92i4RIYI/AAAAAAAAACw/ybd_zPQg7gA/w775-h591-no/Chef_Manage_and_Picasa_3.png">https://lh3.googleusercontent.com/-_jRaxKzYeac/VHw92i4RIYI/AAAAAAAAACw/ybd_zPQg7gA/w775-h591-no/Chef_Manage_and_Picasa_3.png</a>&#8221;></p>

<ul>
<li><p>Upload Roles to Chef Server</p>

<pre><code>   knife role from file roles/myapp.json 
   knife role from file roles/myapp_deploy.json
</code></pre></li>
</ul>


<p>View on Server</p>

<p><img class="<a" src="href="https://lh6.googleusercontent.com/-ARi99k01P8E/VHw_QKAtUPI/AAAAAAAAAC8/weO6WZ8ub-o/w558-h186-no/Chef_Manage.png">https://lh6.googleusercontent.com/-ARi99k01P8E/VHw_QKAtUPI/AAAAAAAAAC8/weO6WZ8ub-o/w558-h186-no/Chef_Manage.png</a>&#8221;></p>

<ul>
<li>Create new enviroment called <code>staging</code> by create staging.json file in <code>enviroments</code> folder</li>
</ul>


<pre><code class="json staging.json">{
  "name": "staging",
  "default_attributes": {
    "apache2": {
      "listen_ports": [
        "80",
        "443"
      ]
    },
    "php": {
      "ext_conf_dir": "/etc/php5/apache2/conf.d"
    },
    "myapp": {
      "user": "ubuntu",
      "root_path": "/var/www/codeforfoods",
      "server_name": "phpdev.codeforfoods.net"
    }
  },
  "json_class": "Chef::Environment",
  "description": "",
  "chef_type": "environment"
}
</code></pre>

<ul>
<li><p>Upload Enviroments to Chef Server</p>

<pre><code>  knife environment from file environments/dev.json 
  knife environment from file environments/staging.json 
</code></pre></li>
</ul>


<p>View on Server</p>

<p><img class="<a" src="href="https://lh4.googleusercontent.com/-kUMwE9lMI1k/VHxAFiJZKcI/AAAAAAAAADE/tVMTf4MMHhQ/w333-h240-no/Chef_Manage.png">https://lh4.googleusercontent.com/-kUMwE9lMI1k/VHxAFiJZKcI/AAAAAAAAADE/tVMTf4MMHhQ/w333-h240-no/Chef_Manage.png</a>&#8221;></p>

<ul>
<li><p>Create an encrypted data bag</p>

<ul>
<li><p>Create encrypted data bag key, the key would help to decrypted the data bag</p>

<pre><code>  openssl rand -base64 512 | tr -d 'rn' &gt; ~/.chef/encrypted_data_bag_secret
  chmod 600 ~/.chef/encrypted_data_bag_secret
</code></pre></li>
<li><p>Add below line to <code>.chef/knife.rb</code></p>

<pre><code>  encrypted_data_bag_secret "#{current_dir}/encrypted_data_bag_secret"
</code></pre></li>
<li><p>Create the encrypted data bage</p>

<pre><code>   knife data bag create --secret-file ~/.chef/encrypted_data_bag_secret secrets myapp
</code></pre></li>
</ul>


<p>  <img class="<a" src="href="https://lh6.googleusercontent.com/--OFW4K4ZuFk/VHxfvrX4DCI/AAAAAAAAADU/SGCTIKaQW9s/w290-h249-no/php-cooking_%E2%80%94_vim_%E2%80%94_162%C3%9730.png">https://lh6.googleusercontent.com/&#8211;OFW4K4ZuFk/VHxfvrX4DCI/AAAAAAAAADU/SGCTIKaQW9s/w290-h249-no/php-cooking_%E2%80%94_vim_%E2%80%94_162%C3%9730.png</a>&#8221;></p>

<p>  View on Server</p>

<p>  <img class="<a" src="href="https://lh3.googleusercontent.com/-1W37bGO_9FU/VHxifiyiOCI/AAAAAAAAADg/VsHn4LbYVf4/w958-h421-no/Chef_Manage.png">https://lh3.googleusercontent.com/-1W37bGO_9FU/VHxifiyiOCI/AAAAAAAAADg/VsHn4LbYVf4/w958-h421-no/Chef_Manage.png</a>&#8221;></p></li>
</ul>


<h1>Setup Vagrant use chef-client as provision</h1>

<pre><code class="ruby Vagrantfile"># -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
CHEF_PATH = "."
SYNC_PATH = "./www"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "ubuntu14.04"
  config.vm.box_url = "https://oss-binaries.phusionpassenger.com/vagrant/boxes/latest/ubuntu-14.04-amd64-vbox.box"
  config.vm.network "private_network", ip: "192.168.34.100"
  config.vm.hostname = "devphp.congdang.com"
  config.ssh.forward_agent = true
  config.ssh.forward_x11   = true

  config.vm.provider "virtualbox" do |vb|
    vb.customize(["modifyvm", :id, "--natdnshostresolver1", "off"  ])
    vb.customize(["modifyvm", :id, "--natdnsproxy1",        "off"  ])
    vb.customize(["modifyvm", :id, "--memory",              "1024" ])
  end



  config.omnibus.chef_version = '11.16.0'

  # Your organization name for hosted Chef 
  orgname = "chicken"

  # Set the Chef node ID based on environment variable NODE, if set. Otherwise default to vagrant-$USER
  node = ENV['NODE']
  node ||= "vagrant-codeforfoods"

  config.vm.provision :chef_client do |chef|
    chef.chef_server_url = "https://api.opscode.com/organizations/#{orgname}"
    chef.validation_key_path = "#{CHEF_PATH}/.chef/#{orgname}-validator.pem"
    chef.validation_client_name = "#{orgname}-validator"
    chef.encrypted_data_bag_secret_key_path = "#{CHEF_PATH}/.chef/encrypted_data_bag_secret"
    chef.node_name = "#{node}"
    chef.provisioning_path = "/etc/chef"
    chef.log_level = :debug
    #chef.log_level = :info

    chef.environment = "dev" 
    chef.add_role("myapp")

    #chef.json.merge!({ :mysql_password =&gt; "foo" }) # You can do this to override any default attributes for this node.
  end   


  config.vm.synced_folder("#{SYNC_PATH}", "/vagrant",
                          :owner =&gt; "vagrant",
                          :group =&gt; "vagrant",
                          :mount_options =&gt; ['dmode=777','fmode=777'])
end
</code></pre>

<p>Starting <code>Vagrant</code></p>

<pre><code>    vagrant up
</code></pre>

<p>Chef the webapp on browser</p>

<pre><code>
http://192.168.34.100
</code></pre>

<h1>Bootstrap a Server</h1>

<p><a href="http://cloudshare.com">Cloudshare</a> provides a easy way to create new node for testing <a href="http://learn.getchef.com/ubuntu/bootstrap-your-node/">More detail here</a></p>

<ul>
<li>Get a Linux machine to bootstrap</li>
</ul>


<p><img class="<a" src="href="https://lh5.googleusercontent.com/-rJtVKEyp_-k/VHx18JYfv0I/AAAAAAAAADw/fECENQ9LPqo/w661-h524-no/Machines.png">https://lh5.googleusercontent.com/-rJtVKEyp_-k/VHx18JYfv0I/AAAAAAAAADw/fECENQ9LPqo/w661-h524-no/Machines.png</a>&#8221;></p>

<ul>
<li><p>Bootstrap your node</p>

<pre><code>  knife bootstrap uvo1vinqr3ty38kwnpn.vm.cld.sr -x sysadmin -P Oi9YB7HTfP --sudo -N node1 -r 'role[myapp]' -E staging
</code></pre></li>
</ul>


<p>** If you meet the error while creating the node, please see the comment in this <a href="https://groups.google.com/forum/#!topic/learnchef-fundamentals-webinar/LYe_i_QIWdU">https://groups.google.com/forum/#!topic/learnchef-fundamentals-webinar/LYe_i_QIWdU</a></p>

<p>Error</p>

<pre><code class="bash">54.79.58.34   knife ssl check -c /etc/chef/client.rb
54.79.58.34 ```
54.79.58.34 
54.79.58.34 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
54.79.58.34 
54.79.58.34 Starting Chef Client, version 11.16.4
54.79.58.34 
54.79.58.34 ================================================================================
54.79.58.34 Chef encountered an error attempting to load the node data for "testnode"
54.79.58.34 ================================================================================
54.79.58.34 
54.79.58.34 Authentication Error:
54.79.58.34 ---------------------
54.79.58.34 Failed to authenticate to the chef server (http 401).
54.79.58.34 
54.79.58.34 Server Response:
54.79.58.34 ----------------
54.79.58.34 Failed to authenticate as 'testnode'. Ensure that your node_name and client key are correct.
54.79.58.34 
54.79.58.34 Relevant Config Settings:
54.79.58.34 -------------------------
54.79.58.34 chef_server_url   "https://api.opscode.com/organizations/cd-chef"
54.79.58.34 node_name         "testnode"
54.79.58.34 client_key        "/etc/chef/client.pem"
</code></pre>

<p>SSH to server and do this command</p>

<pre><code>    sudo rm -rf /etc/chef/client.pem
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Php-cooking]]></title>
    <link href="http://codeforfoods.net/blog/2014/11/07/php-cooking/"/>
    <updated>2014-11-07T11:03:51+07:00</updated>
    <id>http://codeforfoods.net/blog/2014/11/07/php-cooking</id>
    <content type="html"><![CDATA[<p>This article would help you to setup Chef for PHP stuff step by step</p>

<h4>Step 1 - Install required tools</h4>

<ul>
<li>Ruby</li>
</ul>


<pre><code>    https://www.ruby-lang.org/en/installation/
</code></pre>

<ul>
<li>Knife Solo</li>
</ul>


<pre><code>    gem install knife-solo
</code></pre>

<ul>
<li>librarian-chef</li>
</ul>


<pre><code>    gem install librarian-chef
</code></pre>

<h4>Step 2 - Setup</h4>

<ul>
<li><p>Create new directory for your project</p>

<pre><code>  mkdir /your-path/php-cooking
</code></pre></li>
<li><p>Move to php-cooking folder</p>

<pre><code>  cd /your-path/php-cooking
</code></pre></li>
<li><p>Initialize librarian-chef</p>

<pre><code>  librarian-chef init
</code></pre></li>
<li><p>Initialize knife solo</p>

<pre><code>  knife solo init .
</code></pre></li>
</ul>


<p>After initialazing, you should see the folder structure like below (notice that I added the <code>www</code> folder for containing the php&rsquo;s web app )</p>

<p><img class="<a" src="href="https://lh5.googleusercontent.com/-e9FKrxVfB50/VFxCHoV-CaI/AAAAAAAAABg/aBM_nLe5EMY/s418/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png">https://lh5.googleusercontent.com/-e9FKrxVfB50/VFxCHoV-CaI/AAAAAAAAABg/aBM_nLe5EMY/s418/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png</a>&#8221;></p>

<p>Ok, now is time for adding the necessary cookbooks to <code>Cheffile</code></p>

<pre><code class="ruby Cheffile">    #!/usr/bin/env ruby
    #^syntax detection

    site 'https://supermarket.getchef.com/api/v1'


    cookbook 'php', '~&gt; 1.4.6'

    cookbook "php55",
      :git =&gt; "https://github.com/aporat/php55-cookbook"

    cookbook 'php-mcrypt', '~&gt; 1.0.0'

    cookbook 'apache2', '&gt;= 1.0.0'

    cookbook 'mysql', '~&gt; 5.5.2'

    cookbook 'composer', '~&gt; 1.0.5'
</code></pre>

<p>This is including <code>php</code>, <code>apache</code>, <code>mysql</code> and <code>composer</code></p>

<p>Next we will need to install all cookbooks which be specified in <code>Cheffile</code></p>

<pre><code>    librarian-chef install
</code></pre>

<p>After installing, you should see the cookbooks folder as below</p>

<p><img class="<a" src="href="https://lh4.googleusercontent.com/-zg-x4_s1JLw/VFxCwKlTkfI/AAAAAAAAACE/sVvPi3G5hGA/s492/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png">https://lh4.googleusercontent.com/-zg-x4_s1JLw/VFxCwKlTkfI/AAAAAAAAACE/sVvPi3G5hGA/s492/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png</a>&#8221;></p>

<p>That&rsquo;s good so far, now we should setup <code>roles</code>, <code>enviroments</code> and <code>owner cookbooks</code> for install the web server and deploy your application to web server.</p>

<ul>
<li>Setup <code>dev environent</code>: create a file called <code>dev.json</code> in enviroment folder</li>
</ul>


<p><img class="<a" src="href="https://lh4.googleusercontent.com/-zg-x4_s1JLw/VFxCwKlTkfI/AAAAAAAAACE/sVvPi3G5hGA/s492/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png">https://lh4.googleusercontent.com/-zg-x4_s1JLw/VFxCwKlTkfI/AAAAAAAAACE/sVvPi3G5hGA/s492/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png</a>&#8221;></p>

<pre><code class="json dev.json">    {
      "name": "dev",
      "default_attributes": {
        "apache2": {
          "listen_ports": [
            "80",
            "443"
          ]
        },
        "php": {
          "ext_conf_dir": "/etc/php5/apache2/conf.d"
        },
        "myapp": {
          "user": "vagrant",
          "root_path": "/vagrant",
          "server_name": "phpdev.codeforfoods.net"
        }
      },
      "json_class": "Chef::Environment",
      "description": "",
      "chef_type": "environment"
    }
</code></pre>

<ul>
<li>Setup <code>myapp role</code> and <code>myapp deploy role</code>: create 2 file <code>myapp.json</code> and <code>myapp_deploy.json</code> in roles folder</li>
</ul>


<p><img class="<a" src="href="https://lh6.googleusercontent.com/-yoM7_7UiHBY/VFxCYAUZpJI/AAAAAAAAABs/xbd3d4fabn8/s184/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png">https://lh6.googleusercontent.com/-yoM7_7UiHBY/VFxCYAUZpJI/AAAAAAAAABs/xbd3d4fabn8/s184/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png</a>&#8221;></p>

<pre><code class="json myapp.json">
    {
        "name": "myapp",
        "description": "The role for app servers",
        "json_class": "Chef::Role",
        "default_attributes": {},
        "override_attributes": {},
        "chef_type": "role",
        "run_list": [
            "recipe[apt]",
            "recipe[build-essential]",
            "recipe[composer]",
            "recipe[myapp]",
            "recipe[myapp::deploy]"
        ],
        "env_run_lists": {
            "dev": [
                "recipe[apt]",
                "recipe[build-essential]",
                "recipe[composer]",
                "recipe[myapp]",
                "recipe[myapp::deploy]"
            ]
        }
    }
</code></pre>

<pre><code class="json myapp_deploy.json">
    {
        "name": "myapp_deploy",
        "description": "The role for app servers",
        "json_class": "Chef::Role",
        "default_attributes": {},
        "override_attributes": {},
        "chef_type": "role",
        "run_list": [
            "recipe[myapp::deploy]"
        ],
        "env_run_lists": {
            "dev": [
                "recipe[myapp::deploy]"
            ]
        }
    }
</code></pre>

<ul>
<li><p>Create a owner cookbook called <code>myapp</code>, this should be store in <code>site-cookbooks</code> folder</p>

<pre><code>      knife cookbook create myapp
</code></pre></li>
</ul>


<p><img class="<a" src="href="https://lh3.googleusercontent.com/-7wagSNwnOWI/VFxESOwCZCI/AAAAAAAAACs/Xe7vU8MlycA/s415/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png">https://lh3.googleusercontent.com/-7wagSNwnOWI/VFxESOwCZCI/AAAAAAAAACs/Xe7vU8MlycA/s415/README_md_-__Users_congdang_my-training_codeforfoods_php-cooking_-_Atom.png</a>&#8221;></p>

<p>Notes:</p>

<p>1) 2 recipes, one for myapp default and other for myapp deploy</p>

<pre><code class="ruby defaut.rb">    include_recipe "apache2"
    include_recipe "mysql::client"
    include_recipe "mysql::server"

    include_recipe "php55"


    include_recipe "php::module_mysql"
    include_recipe "php::module_curl"
    include_recipe "php::module_memcache"
    include_recipe "apache2::mod_php5"
    include_recipe "apache2::mod_expires"

    include_recipe "php-mcrypt"

    # disble default site.
    apache_site "default" do
        enable false
    end
</code></pre>

<pre><code class="ruby deploy.rb">    # grant permission for webroot
    directory node["myapp"]["root_path"] do
        owner "root"
        group "root"
        mode "0755"
        action :create
        recursive true
    end

    # reading the data bag
    #secrets = Chef::EncryptedDataBagItem.load("secrets", "myapp")

    if node.chef_environment == "dev"
            # enable kizang-api site.
            web_app 'myapp' do
            template 'site.conf.erb'
            docroot node['myapp']['root_path']
            server_name node['myapp']['server_name']
    end
    else

    end
</code></pre>

<p>2) the Apache configuration template file</p>

<pre><code class="ruby site.conf.erb">    &lt;VirtualHost *:80&gt;
        ServerName &lt;%= @params[:server_name] %&gt;
        DocumentRoot &lt;%= @params[:docroot] %&gt;

        &lt;Directory &lt;%= @params[:docroot] %&gt;&gt;
            Options FollowSymLinks
            AllowOverride All

            &lt;% if node['apache']['version'] == '2.4' -%&gt;
                    Require all granted
                &lt;% elsif node['apache']['version'] == '2.2' -%&gt;
                Order allow,deny
                Allow from all
                &lt;% end -%&gt;

            RewriteEngine On
            RewriteBase /
            RewriteRule ^index\.php$ - [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.php [L]


        &lt;/Directory&gt;

        &lt;Directory /&gt;
            Options FollowSymLinks
            AllowOverride None
        &lt;/Directory&gt;
        ErrorLog ${APACHE_LOG_DIR}/myapp.error.log
        # Possible values include: debug, info, notice, warn, error, crit,
        # alert, emerg.
        LogLevel warn
        CustomLog ${APACHE_LOG_DIR}/myapp.access.log combined
    &lt;/VirtualHost&gt;
</code></pre>

<h4>Step 3 - Setup vagrant for create development environment</h4>

<p>Ok! Almost Chef setting up is done, now you should create a <code>Vagrantfile</code> and use chef-solo as provision for install development server</p>

<pre><code class="ruby Vagrantfile">
    # -*- mode: ruby -*-
    # vi: set ft=ruby :

    # Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
    VAGRANTFILE_API_VERSION = "2"
    CHEF_PATH = "."
    SYNC_PATH = "./www"
    Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

        config.vm.box = "ubuntu14.04"
        config.vm.box_url = "https://oss-binaries.phusionpassenger.com/vagrant/boxes/latest/ubuntu-14.04-amd64-vbox.box"
        config.vm.network "private_network", ip: "192.168.34.100"
        config.vm.hostname = "devphp.congdang.com"
        config.ssh.forward_agent = true
        config.ssh.forward_x11   = true

        config.vm.provider "virtualbox" do |vb|
            vb.customize(["modifyvm", :id, "--natdnshostresolver1", "off"  ])
            vb.customize(["modifyvm", :id, "--natdnsproxy1",        "off"  ])
            vb.customize(["modifyvm", :id, "--memory",              "1024" ])
        end



        config.omnibus.chef_version = '11.16.0'
        config.vm.provision :chef_solo do |chef|


        chef.cookbooks_path = "#{CHEF_PATH}/cookbooks", "#{CHEF_PATH}/site-cookbooks"
        chef.environments_path = "#{CHEF_PATH}/environments"
        chef.environment = "dev"
        chef.roles_path = "#{CHEF_PATH}/roles"
        chef.add_role('myapp')
        end

        config.vm.synced_folder("#{SYNC_PATH}", "/vagrant",
                                                        :owner =&gt; "vagrant",
                                                        :group =&gt; "vagrant",
                                                        :mount_options =&gt; ['dmode=777','fmode=777'])
    end
</code></pre>

<p>Notice that, I used <code>www</code> vagrant&rsquo;s sync folder. That means you should store your web application in <code>www</code> folder. In this article I just created a simple php file in that folder</p>

<pre><code class="php index.php">
    &lt;?php
        echo "Hello PHP world!!!!";
    ?&gt;
</code></pre>

<p>Finally you need to run vagrant and check the site on the browser</p>

<pre><code>        vagrant up
</code></pre>

<p>Once vagrant upping is done, you can check your application on browser</p>

<pre><code>        http://192.168.34.100
</code></pre>

<h4>Conclusion</h4>

<p>You can pull all code from my github</p>

<pre><code class="bash repository on gihub">    https://github.com/code-for-food/php-cooking.git # fork from github
</code></pre>

<p>In this Chef, I&rsquo;ve setup <code>mysql</code> as well but I just only used <code>php</code> and <code>apache</code>. You can add more code in <code>defaul.rb</code> recipe for using <code>mysql</code> for your project. If you have any question, you can drop an email to me <a href="mailto:code.for.food.14@gmail.com">codeforfoods</a>.</p>

<p>Thanks for your reading!!!</p>
]]></content>
  </entry>
  
</feed>
